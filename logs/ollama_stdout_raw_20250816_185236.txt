Thinking...
We need to output code only in a code block. The code must simulate rolling two dice 20 times and display a histogram of the total values. Should be self-contained and runnable. We can use random module, collections.Counter, and maybe matplotlib to display histogram. But the problem might expect simple textual histogram. The question says "display a histogram of the total values". Could be textual or graphical. Likely using matplotlib is fine.

But self-contained code: need import random, matplotlib.pyplot, maybe seaborn? Use standard libs only.

Let's produce code that rolls two dice 20 times, collects sums, prints them, then draws a histogram using matplotlib with bins 2-12. Use plt.hist(sums, bins=range(2, 14), align='left', rwidth=0.8). Show plot.

We must also ensure the code runs when executed. So include main guard? Not necessary. Just code.

Also random seed? Not necessary.

Let's produce code.
...done thinking.

```python
import random
import matplotlib.pyplot as plt

# Simulate rolling two dice 20 times
rolls = [random.randint(1, 6) + random.randint(1, 6) for _ in range(20)]

# Display the results
print("Roll results:", rolls)

# Create histogram of the sums
plt.figure(figsize=(8, 4))
plt.hist(rolls, bins=range(2, 14), align='left', rwidth=0.8, edgecolor='black')
plt.title('Histogram of Two-Dice Sums (20 Rolls)')
plt.xlabel('Sum of Dice')
plt.ylabel('Frequency')
plt.xticks(range(2, 13))
plt.grid(axis='y', alpha=0.75)
plt.show()
```